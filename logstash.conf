# Beats -> Logstash -> Elasticsearch pipeline.

input {
  beats {
    port => "${LOGSTASH_BEATS_PORT}"
    ssl => true
    ssl_key => './config/certs/logstash.pkcs8.key'
    ssl_certificate => './config/certs/logstash.crt'
  }
}
filter {
  mutate {
    add_field => { "isOriginal" => true }
	convert => {
          "[winlog][event_id]" => "integer"
		  "[event][code]" => "integer"
    }
  }
  if [event][provider] == "USSL_Protocol" {
    if [winlog][event_id] == 301 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{USSLPROTOCOL_301}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
          "hostname" => "%{[host][name]}"
        }
      }
    } else if [winlog][event_id] == 302 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{USSLPROTOCOL_302}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
          "hostname" => "%{[host][name]}"
        }
      }
    } else if [winlog][event_id] == 303 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{USSLPROTOCOL_303}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
          "hostname" => "%{[host][name]}"
        }
      }
    } else if [winlog][event_id] == 304 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{USSLPROTOCOL_304}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
          "hostname" => "%{[host][name]}"
        }
      }
    }
    else if [winlog][event_id] == 305 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{USSLPROTOCOL_305}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
          "hostname" => "%{[host][name]}"
        }
      }
    }
    else if [winlog][event_id] == 306 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{USSLPROTOCOL_306}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
          "hostname" => "%{[host][name]}"
        }
      }
    }
  } else if [event][provider] == "Stealth Endpoint" {
    if [winlog][event_id] == 300 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_300}"}
      }
    } else if [winlog][event_id] == 301 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_301}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    } else if [winlog][event_id] == 302 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_302}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    } else if [winlog][event_id] == 303 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_303}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    } else if [winlog][event_id] == 304 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_304}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    } else if [winlog][event_id] == 305 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_305}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    } else if [winlog][event_id] == 306 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_306}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    } else if [winlog][event_id] == 307 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{StealthEndpoint_307}"}
        add_field => {
          "localRemoteIPAddress" => "%{localIPAddress} - %{remoteIPAddress}"
        }
      }
    }
  } else if [winlog][provider_name] == "StealthUI" {
		if [winlog][event_id] == 107 {
			grok {
			  patterns_dir => ["./config/patterns"]
			  match => { "message" => "%{StealthUI_107RA}"}
			  match => { "message" => "%{StealthUI_107EPP}"}
			  match => { "message" => "%{StealthUI_107SL}"}
			}
		}
		else if [winlog][event_id] == 109 {
			grok {
			  patterns_dir => ["./config/patterns"]
			  match => { "message" => "%{StealthUI_109}"}
			}
		}
		else if [winlog][event_id] == 131 {
			grok {
			  patterns_dir => ["./config/patterns"]
			  match => { "message" => "%{StealthUI_131}"}
			}
		}
		else if [winlog][event_id] == 134 {
			grok {
			  patterns_dir => ["./config/patterns"]
			  match => { "message" => "%{StealthUI_134}"}
			}
		}
		else if [winlog][event_id] == 135 {
			grok {
			  patterns_dir => ["./config/patterns"]
			  match => { "message" => "%{StealthUI_135}"}
			}
		}
  }
  else if [winlog][provider_name] == "EcoAPI_Audit" {
    grok {
      patterns_dir => ["./config/patterns"]
      match => { "message" => "%{Stealth_Audit_EcoAPI}"}
    }
  }
  else {
    if [winlog][event_id] == 9077 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9077}"}
      }
      clone {
        clones => ['duplicate']
      }
      if [type] == 'duplicate' {
        split {
          field => "COI"
          terminator=> ","
        }
        mutate {
          update => { "isOriginal" => false }
          strip => ["COI"]
        }
      } else {
        mutate {
          split => { "COI" => ", " }
        }
      }
    }
    if [winlog][event_id] == 9016{
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9016}"}
      }
      clone {
        clones => ['duplicate']
      }
      if [type] == 'duplicate' {
        split {
          field => "COI"
          terminator=> ","
        }
        mutate {
          update => { "isOriginal" => false }
          strip => ["COI"]
        }
      } else {
        mutate {
          split => { "COI" => ", " }
        }
      }
    }
    if [winlog][event_id] == 9013{
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9013}"}
      }
    }
    if [winlog][event_id] == 9014{
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9014}"}
      }
    }
    if [winlog][event_id] == 9015{
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9015}"}
      }
    }
    #-------------------------- 9046 --------------------------------
    if [winlog][event_id] == 9046 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9046}"}

      }
    }
    #-------------------------- 9053 --------------------------------
    if [winlog][event_id] == 9053 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9053}"}

      }
    }
    #-------------------------- 9093 --------------------------------
    if [winlog][event_id] == 9053 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9093}"}

      }
    }
    #-------------------------- 9143 --------------------------------
    if [winlog][event_id] == 9143 {
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9143}"}

      }
    }
    #-------------------------- 9112 --------------------------------
    if [winlog][event_id] == 9112{
      grok {
        patterns_dir => ["./config/patterns"]
        match => { "message" => "%{Stealth_9112}"}
        add_field => {
          "userDevice" => "%{User} - %{hostname}"
        }
      }
      if (![IPAddress]){
        elasticsearch {
          hosts => ["https://localhost:${ES_PORT}"]
          ca_file => "${ES_HOME}/config/certs/ca/ca.crt"
          user => "editor"
          password => "${editor_password}"
          enable_sort => false
          index => "stealthuserlogs"
          query => 'hostname:"%{[hostname]}"'
          fields => {"IPAddress" => "IPAddress"}
        }
        grok {
          patterns_dir => ["./config/patterns"]
          match => { "IPAddress" => "%{SEPIP}"}
        }
      }
    }
  }

  if [event][code] in [301, 302, 303, 304, 305, 306] {
    mutate {
      add_field => {
        "IPAddress" => "%{localIPAddress}"
      }
    }
    elasticsearch {
      hosts => ["https://localhost:${ES_PORT}"]
      ca_file => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
      enable_sort => false
      index => "stealthuserlogs"
      query => 'IPAddress:"%{[remoteIPAddress]}"'
      fields => {
        "hostname" => "remoteHostname"
        "LicenseType" => "remoteLicenseType"
      }
    }
    elasticsearch {
      hosts => ["https://localhost:${ES_PORT}"]
      ca_file => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
      enable_sort => false
      index => "stealthuserlogs"
      query => 'IPAddress:"%{[localIPAddress]}"'
      fields => {
        "LicenseType" => "LicenseType"
      }
    }
  }

  if ([IPAddressInfo][publicIP]){
    mutate {
      add_field => {
        "[IPAddressInfo][isNAT]" => true
      }
    }
  }
  else if([IPAddressInfo][privateIP]){
    mutate {
      rename => {
        "[IPAddressInfo][privateIP]" => "[IPAddressInfo][publicIP]"
      }
      add_field => {
        "[IPAddressInfo][isNAT]" => false
      }
    }
  }

  if ([remoteIPAddressInfo][publicIP]){
    mutate {
      add_field => {
        "[remoteIPAddressInfo][isNAT]" => true
      }
    }
  }
  else if([remoteIPAddressInfo][privateIP]){
    mutate {
      rename => {
        "[remoteIPAddressInfo][privateIP]" => "[remoteIPAddressInfo][publicIP]"
      }
      add_field => {
        "[remoteIPAddressInfo][isNAT]" => false
      }
    }
  }  
}
output {
  if "_grokparsefailure" in [tags] or "_split_type_failure" in [tags]{
    elasticsearch {
    index => "stealth-parse-errors-%{+YYYY.MM.dd}"
    hosts => ["localhost:${ES_PORT}"]
    ssl => true
    cacert => "${ES_HOME}/config/certs/ca/ca.crt"
    user => "editor"
    password => "${editor_password}"
    }
  }else if [agent][type] == "metricbeat"{
    elasticsearch {
    index => "stealth-metrics-%{+YYYY.MM.dd}"
    hosts => ["localhost:${ES_PORT}"]
    ssl => true
    cacert => "${ES_HOME}/config/certs/ca/ca.crt"
    user => "editor"
    password => "${editor_password}"
    }
  } 
  else if [winlog][provider_name] == "EcoAPI_Audit" {
    elasticsearch {
      index => "stealth-audit-ecoapi-%{+YYYY.MM.dd}"
      hosts => ["localhost:${ES_PORT}"]
      ssl => true
      cacert => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
    }
  }
  else if [winlog][provider_name] == "StealthUI" {
    elasticsearch {
      index => "stealth-portal-%{+YYYY.MM.dd}"
      hosts => ["localhost:${ES_PORT}"]
      ssl => true
      cacert => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
    }
  }  
  else if [winlog][event_id] == 9112 {
    elasticsearch {
      index => "stealth-isolation-%{+YYYY.MM.dd}"
      hosts => ["localhost:${ES_PORT}"]
      ssl => true
      cacert => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
    }
  } else {
    elasticsearch {
      index => "stealthlogs-%{+YYYY.MM.dd}"
      hosts => ["localhost:${ES_PORT}"]
      ssl => true
      cacert => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
    }
  }
  if [winlog][event_id] in [9013, 9014, 9015, 9016, 9046, 9053, 9093,9143, 307] and [isOriginal] == 'true'{
    elasticsearch {
      index => "stealthuserlogs"
      hosts => ["localhost:${ES_PORT}"]
      ssl => true
      cacert => "${ES_HOME}/config/certs/ca/ca.crt"
      user => "editor"
      password => "${editor_password}"
      document_id => "%{hostname}"
    }
  }
}